@page "/usermanager"
@using MyBlazorApp.Shared
@inject HttpClient Http

<h1>System Users</h1>
<p>Test thing : <span>@userId</span> : <span>@status</span></p>

@if (users == null)
{
  <p>No Users Loaded.</p>
}
else
{
  <EjsGrid ID="grid" ModelType="@users[0]" DataSource="@users">
    <GridColumns>
      <GridColumn Field=@nameof(UserInfo.Id) HeaderText="User ID" IsPrimaryKey="true"></GridColumn>
      <GridColumn Field=@nameof(UserInfo.Name) HeaderText="Name"></GridColumn>
      <GridColumn Field=@nameof(UserInfo.Email) HeaderText="Email"></GridColumn>
      <GridColumn Field=@nameof(UserInfo.Type) HeaderText="Type"></GridColumn>
      <GridColumn HeaderText="Is Available?">
        <Template>
          @{
            var user = (context as UserInfo);
            if (user.IsAvailable)
            {
              <p class="text-success"><span class="oi oi-check" aria-hidden="true"></span> YES</p>
            }
            else
            {
              <p class="text-danger"><span class="oi oi-x" aria-hidden="true"></span> NO</p>
            }
            <button class="btn btn-primary" @onclick="@(() => toggleStatus(user.Id, !user.IsAvailable))">Toggle Status</button>
          }
        </Template>
      </GridColumn>
    </GridColumns>
  </EjsGrid>
}

@code {
  UserInfo[] users;

  int userId { get; set; }
  bool status;

  protected override async Task OnInitAsync()
  {
    users = await Http.GetJsonAsync<UserInfo[]>("api/UserData/AllUsers");
  }

  public async void toggleStatus(int theuserId, bool newStatus)
  {
    Console.WriteLine($"User {theuserId} has changed to {newStatus}");
    await Http.PostAsync($"api/UserData/SetStatus/{theuserId}/{newStatus}", null);
    users = await Http.GetJsonAsync<UserInfo[]>("api/UserData/AllUsers");
    StateHasChanged();
  }

}